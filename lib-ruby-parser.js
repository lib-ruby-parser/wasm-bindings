

(function () {
    let root;

    if (typeof (module) !== 'undefined') {
        root = module.exports;
    } else if (typeof (window) !== 'undefined') {
        window.LibRubyParser = {};
        root = window.LibRubyParser;
    }


// This file is autogenerated by codegen/nodes_js.rs

class Node {}
const nodes = {};

(function() {

class Alias extends Node {
    constructor(
        to,
        from,
        keyword_l,
        expression_l,
    ) {
        super();
        this.to = to;
        this.from = from;
        this.keyword_l = keyword_l;
        this.expression_l = expression_l;
    }
}
nodes.Alias = Alias;
class And extends Node {
    constructor(
        lhs,
        rhs,
        operator_l,
        expression_l,
    ) {
        super();
        this.lhs = lhs;
        this.rhs = rhs;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.And = And;
class AndAsgn extends Node {
    constructor(
        recv,
        value,
        operator_l,
        expression_l,
    ) {
        super();
        this.recv = recv;
        this.value = value;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.AndAsgn = AndAsgn;
class Arg extends Node {
    constructor(
        name,
        expression_l,
    ) {
        super();
        this.name = name;
        this.expression_l = expression_l;
    }
}
nodes.Arg = Arg;
class Args extends Node {
    constructor(
        args,
        expression_l,
        begin_l,
        end_l,
    ) {
        super();
        this.args = args;
        this.expression_l = expression_l;
        this.begin_l = begin_l;
        this.end_l = end_l;
    }
}
nodes.Args = Args;
class Array extends Node {
    constructor(
        elements,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.elements = elements;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Array = Array;
class ArrayPattern extends Node {
    constructor(
        elements,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.elements = elements;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.ArrayPattern = ArrayPattern;
class ArrayPatternWithTail extends Node {
    constructor(
        elements,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.elements = elements;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.ArrayPatternWithTail = ArrayPatternWithTail;
class BackRef extends Node {
    constructor(
        name,
        expression_l,
    ) {
        super();
        this.name = name;
        this.expression_l = expression_l;
    }
}
nodes.BackRef = BackRef;
class Begin extends Node {
    constructor(
        statements,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.statements = statements;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Begin = Begin;
class Block extends Node {
    constructor(
        call,
        args,
        body,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.call = call;
        this.args = args;
        this.body = body;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Block = Block;
class Blockarg extends Node {
    constructor(
        name,
        operator_l,
        name_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.operator_l = operator_l;
        this.name_l = name_l;
        this.expression_l = expression_l;
    }
}
nodes.Blockarg = Blockarg;
class BlockPass extends Node {
    constructor(
        value,
        operator_l,
        expression_l,
    ) {
        super();
        this.value = value;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.BlockPass = BlockPass;
class Break extends Node {
    constructor(
        args,
        keyword_l,
        expression_l,
    ) {
        super();
        this.args = args;
        this.keyword_l = keyword_l;
        this.expression_l = expression_l;
    }
}
nodes.Break = Break;
class Case extends Node {
    constructor(
        expr,
        when_bodies,
        else_body,
        keyword_l,
        else_l,
        end_l,
        expression_l,
    ) {
        super();
        this.expr = expr;
        this.when_bodies = when_bodies;
        this.else_body = else_body;
        this.keyword_l = keyword_l;
        this.else_l = else_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Case = Case;
class CaseMatch extends Node {
    constructor(
        expr,
        in_bodies,
        else_body,
        keyword_l,
        else_l,
        end_l,
        expression_l,
    ) {
        super();
        this.expr = expr;
        this.in_bodies = in_bodies;
        this.else_body = else_body;
        this.keyword_l = keyword_l;
        this.else_l = else_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.CaseMatch = CaseMatch;
class Casgn extends Node {
    constructor(
        scope,
        name,
        value,
        double_colon_l,
        name_l,
        operator_l,
        expression_l,
    ) {
        super();
        this.scope = scope;
        this.name = name;
        this.value = value;
        this.double_colon_l = double_colon_l;
        this.name_l = name_l;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Casgn = Casgn;
class Cbase extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.Cbase = Cbase;
class Class extends Node {
    constructor(
        name,
        superclass,
        body,
        keyword_l,
        operator_l,
        end_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.superclass = superclass;
        this.body = body;
        this.keyword_l = keyword_l;
        this.operator_l = operator_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Class = Class;
class Complex extends Node {
    constructor(
        value,
        operator_l,
        expression_l,
    ) {
        super();
        this.value = value;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Complex = Complex;
class Const extends Node {
    constructor(
        scope,
        name,
        double_colon_l,
        name_l,
        expression_l,
    ) {
        super();
        this.scope = scope;
        this.name = name;
        this.double_colon_l = double_colon_l;
        this.name_l = name_l;
        this.expression_l = expression_l;
    }
}
nodes.Const = Const;
class ConstPattern extends Node {
    constructor(
        const_,
        pattern,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.const_ = const_;
        this.pattern = pattern;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.ConstPattern = ConstPattern;
class CSend extends Node {
    constructor(
        recv,
        method_name,
        args,
        dot_l,
        selector_l,
        begin_l,
        end_l,
        operator_l,
        expression_l,
    ) {
        super();
        this.recv = recv;
        this.method_name = method_name;
        this.args = args;
        this.dot_l = dot_l;
        this.selector_l = selector_l;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.CSend = CSend;
class Cvar extends Node {
    constructor(
        name,
        expression_l,
    ) {
        super();
        this.name = name;
        this.expression_l = expression_l;
    }
}
nodes.Cvar = Cvar;
class Cvasgn extends Node {
    constructor(
        name,
        value,
        name_l,
        operator_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.value = value;
        this.name_l = name_l;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Cvasgn = Cvasgn;
class Def extends Node {
    constructor(
        name,
        args,
        body,
        keyword_l,
        name_l,
        end_l,
        assignment_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.args = args;
        this.body = body;
        this.keyword_l = keyword_l;
        this.name_l = name_l;
        this.end_l = end_l;
        this.assignment_l = assignment_l;
        this.expression_l = expression_l;
    }
}
nodes.Def = Def;
class Defined extends Node {
    constructor(
        value,
        keyword_l,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.value = value;
        this.keyword_l = keyword_l;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Defined = Defined;
class Defs extends Node {
    constructor(
        definee,
        name,
        args,
        body,
        keyword_l,
        operator_l,
        name_l,
        assignment_l,
        end_l,
        expression_l,
    ) {
        super();
        this.definee = definee;
        this.name = name;
        this.args = args;
        this.body = body;
        this.keyword_l = keyword_l;
        this.operator_l = operator_l;
        this.name_l = name_l;
        this.assignment_l = assignment_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Defs = Defs;
class Dstr extends Node {
    constructor(
        parts,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.parts = parts;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Dstr = Dstr;
class Dsym extends Node {
    constructor(
        parts,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.parts = parts;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Dsym = Dsym;
class EFlipFlop extends Node {
    constructor(
        left,
        right,
        operator_l,
        expression_l,
    ) {
        super();
        this.left = left;
        this.right = right;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.EFlipFlop = EFlipFlop;
class EmptyElse extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.EmptyElse = EmptyElse;
class Encoding extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.Encoding = Encoding;
class Ensure extends Node {
    constructor(
        body,
        ensure,
        keyword_l,
        expression_l,
    ) {
        super();
        this.body = body;
        this.ensure = ensure;
        this.keyword_l = keyword_l;
        this.expression_l = expression_l;
    }
}
nodes.Ensure = Ensure;
class Erange extends Node {
    constructor(
        left,
        right,
        operator_l,
        expression_l,
    ) {
        super();
        this.left = left;
        this.right = right;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Erange = Erange;
class False extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.False = False;
class File extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.File = File;
class FindPattern extends Node {
    constructor(
        elements,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.elements = elements;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.FindPattern = FindPattern;
class Float extends Node {
    constructor(
        value,
        operator_l,
        expression_l,
    ) {
        super();
        this.value = value;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Float = Float;
class For extends Node {
    constructor(
        iterator,
        iteratee,
        body,
        keyword_l,
        operator_l,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.iterator = iterator;
        this.iteratee = iteratee;
        this.body = body;
        this.keyword_l = keyword_l;
        this.operator_l = operator_l;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.For = For;
class ForwardArg extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.ForwardArg = ForwardArg;
class ForwardedArgs extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.ForwardedArgs = ForwardedArgs;
class Gvar extends Node {
    constructor(
        name,
        expression_l,
    ) {
        super();
        this.name = name;
        this.expression_l = expression_l;
    }
}
nodes.Gvar = Gvar;
class Gvasgn extends Node {
    constructor(
        name,
        value,
        name_l,
        operator_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.value = value;
        this.name_l = name_l;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Gvasgn = Gvasgn;
class Hash extends Node {
    constructor(
        pairs,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.pairs = pairs;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Hash = Hash;
class HashPattern extends Node {
    constructor(
        elements,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.elements = elements;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.HashPattern = HashPattern;
class Heredoc extends Node {
    constructor(
        parts,
        heredoc_body_l,
        heredoc_end_l,
        expression_l,
    ) {
        super();
        this.parts = parts;
        this.heredoc_body_l = heredoc_body_l;
        this.heredoc_end_l = heredoc_end_l;
        this.expression_l = expression_l;
    }
}
nodes.Heredoc = Heredoc;
class If extends Node {
    constructor(
        cond,
        if_true,
        if_false,
        keyword_l,
        begin_l,
        else_l,
        end_l,
        expression_l,
    ) {
        super();
        this.cond = cond;
        this.if_true = if_true;
        this.if_false = if_false;
        this.keyword_l = keyword_l;
        this.begin_l = begin_l;
        this.else_l = else_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.If = If;
class IfGuard extends Node {
    constructor(
        cond,
        keyword_l,
        expression_l,
    ) {
        super();
        this.cond = cond;
        this.keyword_l = keyword_l;
        this.expression_l = expression_l;
    }
}
nodes.IfGuard = IfGuard;
class IFlipFlop extends Node {
    constructor(
        left,
        right,
        operator_l,
        expression_l,
    ) {
        super();
        this.left = left;
        this.right = right;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.IFlipFlop = IFlipFlop;
class IfMod extends Node {
    constructor(
        cond,
        if_true,
        if_false,
        keyword_l,
        expression_l,
    ) {
        super();
        this.cond = cond;
        this.if_true = if_true;
        this.if_false = if_false;
        this.keyword_l = keyword_l;
        this.expression_l = expression_l;
    }
}
nodes.IfMod = IfMod;
class IfTernary extends Node {
    constructor(
        cond,
        if_true,
        if_false,
        question_l,
        colon_l,
        expression_l,
    ) {
        super();
        this.cond = cond;
        this.if_true = if_true;
        this.if_false = if_false;
        this.question_l = question_l;
        this.colon_l = colon_l;
        this.expression_l = expression_l;
    }
}
nodes.IfTernary = IfTernary;
class Index extends Node {
    constructor(
        recv,
        indexes,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.recv = recv;
        this.indexes = indexes;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Index = Index;
class IndexAsgn extends Node {
    constructor(
        recv,
        indexes,
        value,
        begin_l,
        end_l,
        operator_l,
        expression_l,
    ) {
        super();
        this.recv = recv;
        this.indexes = indexes;
        this.value = value;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.IndexAsgn = IndexAsgn;
class InPattern extends Node {
    constructor(
        pattern,
        guard,
        body,
        keyword_l,
        begin_l,
        expression_l,
    ) {
        super();
        this.pattern = pattern;
        this.guard = guard;
        this.body = body;
        this.keyword_l = keyword_l;
        this.begin_l = begin_l;
        this.expression_l = expression_l;
    }
}
nodes.InPattern = InPattern;
class Int extends Node {
    constructor(
        value,
        operator_l,
        expression_l,
    ) {
        super();
        this.value = value;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Int = Int;
class Irange extends Node {
    constructor(
        left,
        right,
        operator_l,
        expression_l,
    ) {
        super();
        this.left = left;
        this.right = right;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Irange = Irange;
class Ivar extends Node {
    constructor(
        name,
        expression_l,
    ) {
        super();
        this.name = name;
        this.expression_l = expression_l;
    }
}
nodes.Ivar = Ivar;
class Ivasgn extends Node {
    constructor(
        name,
        value,
        name_l,
        operator_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.value = value;
        this.name_l = name_l;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Ivasgn = Ivasgn;
class Kwarg extends Node {
    constructor(
        name,
        name_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.name_l = name_l;
        this.expression_l = expression_l;
    }
}
nodes.Kwarg = Kwarg;
class Kwargs extends Node {
    constructor(
        pairs,
        expression_l,
    ) {
        super();
        this.pairs = pairs;
        this.expression_l = expression_l;
    }
}
nodes.Kwargs = Kwargs;
class KwBegin extends Node {
    constructor(
        statements,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.statements = statements;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.KwBegin = KwBegin;
class Kwnilarg extends Node {
    constructor(
        name_l,
        expression_l,
    ) {
        super();
        this.name_l = name_l;
        this.expression_l = expression_l;
    }
}
nodes.Kwnilarg = Kwnilarg;
class Kwoptarg extends Node {
    constructor(
        name,
        default_,
        name_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.default_ = default_;
        this.name_l = name_l;
        this.expression_l = expression_l;
    }
}
nodes.Kwoptarg = Kwoptarg;
class Kwrestarg extends Node {
    constructor(
        name,
        operator_l,
        name_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.operator_l = operator_l;
        this.name_l = name_l;
        this.expression_l = expression_l;
    }
}
nodes.Kwrestarg = Kwrestarg;
class Kwsplat extends Node {
    constructor(
        value,
        operator_l,
        expression_l,
    ) {
        super();
        this.value = value;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Kwsplat = Kwsplat;
class Lambda extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.Lambda = Lambda;
class Line extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.Line = Line;
class Lvar extends Node {
    constructor(
        name,
        expression_l,
    ) {
        super();
        this.name = name;
        this.expression_l = expression_l;
    }
}
nodes.Lvar = Lvar;
class Lvasgn extends Node {
    constructor(
        name,
        value,
        name_l,
        operator_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.value = value;
        this.name_l = name_l;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Lvasgn = Lvasgn;
class Masgn extends Node {
    constructor(
        lhs,
        rhs,
        operator_l,
        expression_l,
    ) {
        super();
        this.lhs = lhs;
        this.rhs = rhs;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Masgn = Masgn;
class MatchAlt extends Node {
    constructor(
        lhs,
        rhs,
        operator_l,
        expression_l,
    ) {
        super();
        this.lhs = lhs;
        this.rhs = rhs;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.MatchAlt = MatchAlt;
class MatchAs extends Node {
    constructor(
        value,
        as,
        operator_l,
        expression_l,
    ) {
        super();
        this.value = value;
        this.as = as;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.MatchAs = MatchAs;
class MatchCurrentLine extends Node {
    constructor(
        re,
        expression_l,
    ) {
        super();
        this.re = re;
        this.expression_l = expression_l;
    }
}
nodes.MatchCurrentLine = MatchCurrentLine;
class MatchNilPattern extends Node {
    constructor(
        operator_l,
        name_l,
        expression_l,
    ) {
        super();
        this.operator_l = operator_l;
        this.name_l = name_l;
        this.expression_l = expression_l;
    }
}
nodes.MatchNilPattern = MatchNilPattern;
class MatchPattern extends Node {
    constructor(
        value,
        pattern,
        operator_l,
        expression_l,
    ) {
        super();
        this.value = value;
        this.pattern = pattern;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.MatchPattern = MatchPattern;
class MatchPatternP extends Node {
    constructor(
        value,
        pattern,
        operator_l,
        expression_l,
    ) {
        super();
        this.value = value;
        this.pattern = pattern;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.MatchPatternP = MatchPatternP;
class MatchRest extends Node {
    constructor(
        name,
        operator_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.MatchRest = MatchRest;
class MatchVar extends Node {
    constructor(
        name,
        name_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.name_l = name_l;
        this.expression_l = expression_l;
    }
}
nodes.MatchVar = MatchVar;
class MatchWithLvasgn extends Node {
    constructor(
        re,
        value,
        operator_l,
        expression_l,
    ) {
        super();
        this.re = re;
        this.value = value;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.MatchWithLvasgn = MatchWithLvasgn;
class Mlhs extends Node {
    constructor(
        items,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.items = items;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Mlhs = Mlhs;
class Module extends Node {
    constructor(
        name,
        body,
        keyword_l,
        end_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.body = body;
        this.keyword_l = keyword_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Module = Module;
class Next extends Node {
    constructor(
        args,
        keyword_l,
        expression_l,
    ) {
        super();
        this.args = args;
        this.keyword_l = keyword_l;
        this.expression_l = expression_l;
    }
}
nodes.Next = Next;
class Nil extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.Nil = Nil;
class NthRef extends Node {
    constructor(
        name,
        expression_l,
    ) {
        super();
        this.name = name;
        this.expression_l = expression_l;
    }
}
nodes.NthRef = NthRef;
class Numblock extends Node {
    constructor(
        call,
        numargs,
        body,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.call = call;
        this.numargs = numargs;
        this.body = body;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Numblock = Numblock;
class OpAsgn extends Node {
    constructor(
        recv,
        operator,
        value,
        operator_l,
        expression_l,
    ) {
        super();
        this.recv = recv;
        this.operator = operator;
        this.value = value;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.OpAsgn = OpAsgn;
class Optarg extends Node {
    constructor(
        name,
        default_,
        name_l,
        operator_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.default_ = default_;
        this.name_l = name_l;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Optarg = Optarg;
class Or extends Node {
    constructor(
        lhs,
        rhs,
        operator_l,
        expression_l,
    ) {
        super();
        this.lhs = lhs;
        this.rhs = rhs;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Or = Or;
class OrAsgn extends Node {
    constructor(
        recv,
        value,
        operator_l,
        expression_l,
    ) {
        super();
        this.recv = recv;
        this.value = value;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.OrAsgn = OrAsgn;
class Pair extends Node {
    constructor(
        key,
        value,
        operator_l,
        expression_l,
    ) {
        super();
        this.key = key;
        this.value = value;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Pair = Pair;
class Pin extends Node {
    constructor(
        var_,
        selector_l,
        expression_l,
    ) {
        super();
        this.var_ = var_;
        this.selector_l = selector_l;
        this.expression_l = expression_l;
    }
}
nodes.Pin = Pin;
class Postexe extends Node {
    constructor(
        body,
        keyword_l,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.body = body;
        this.keyword_l = keyword_l;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Postexe = Postexe;
class Preexe extends Node {
    constructor(
        body,
        keyword_l,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.body = body;
        this.keyword_l = keyword_l;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Preexe = Preexe;
class Procarg0 extends Node {
    constructor(
        args,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.args = args;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Procarg0 = Procarg0;
class Rational extends Node {
    constructor(
        value,
        operator_l,
        expression_l,
    ) {
        super();
        this.value = value;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Rational = Rational;
class Redo extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.Redo = Redo;
class Regexp extends Node {
    constructor(
        parts,
        options,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.parts = parts;
        this.options = options;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Regexp = Regexp;
class RegOpt extends Node {
    constructor(
        options,
        expression_l,
    ) {
        super();
        this.options = options;
        this.expression_l = expression_l;
    }
}
nodes.RegOpt = RegOpt;
class Rescue extends Node {
    constructor(
        body,
        rescue_bodies,
        else_,
        else_l,
        expression_l,
    ) {
        super();
        this.body = body;
        this.rescue_bodies = rescue_bodies;
        this.else_ = else_;
        this.else_l = else_l;
        this.expression_l = expression_l;
    }
}
nodes.Rescue = Rescue;
class RescueBody extends Node {
    constructor(
        exc_list,
        exc_var,
        body,
        keyword_l,
        assoc_l,
        begin_l,
        expression_l,
    ) {
        super();
        this.exc_list = exc_list;
        this.exc_var = exc_var;
        this.body = body;
        this.keyword_l = keyword_l;
        this.assoc_l = assoc_l;
        this.begin_l = begin_l;
        this.expression_l = expression_l;
    }
}
nodes.RescueBody = RescueBody;
class Restarg extends Node {
    constructor(
        name,
        operator_l,
        name_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.operator_l = operator_l;
        this.name_l = name_l;
        this.expression_l = expression_l;
    }
}
nodes.Restarg = Restarg;
class Retry extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.Retry = Retry;
class Return extends Node {
    constructor(
        args,
        keyword_l,
        expression_l,
    ) {
        super();
        this.args = args;
        this.keyword_l = keyword_l;
        this.expression_l = expression_l;
    }
}
nodes.Return = Return;
class SClass extends Node {
    constructor(
        expr,
        body,
        keyword_l,
        operator_l,
        end_l,
        expression_l,
    ) {
        super();
        this.expr = expr;
        this.body = body;
        this.keyword_l = keyword_l;
        this.operator_l = operator_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.SClass = SClass;
class Self_ extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.Self_ = Self_;
class Send extends Node {
    constructor(
        recv,
        method_name,
        args,
        dot_l,
        selector_l,
        begin_l,
        end_l,
        operator_l,
        expression_l,
    ) {
        super();
        this.recv = recv;
        this.method_name = method_name;
        this.args = args;
        this.dot_l = dot_l;
        this.selector_l = selector_l;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Send = Send;
class Shadowarg extends Node {
    constructor(
        name,
        expression_l,
    ) {
        super();
        this.name = name;
        this.expression_l = expression_l;
    }
}
nodes.Shadowarg = Shadowarg;
class Splat extends Node {
    constructor(
        value,
        operator_l,
        expression_l,
    ) {
        super();
        this.value = value;
        this.operator_l = operator_l;
        this.expression_l = expression_l;
    }
}
nodes.Splat = Splat;
class Str extends Node {
    constructor(
        value,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.value = value;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Str = Str;
class Super extends Node {
    constructor(
        args,
        keyword_l,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.args = args;
        this.keyword_l = keyword_l;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Super = Super;
class Sym extends Node {
    constructor(
        name,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.name = name;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Sym = Sym;
class True extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.True = True;
class Undef extends Node {
    constructor(
        names,
        keyword_l,
        expression_l,
    ) {
        super();
        this.names = names;
        this.keyword_l = keyword_l;
        this.expression_l = expression_l;
    }
}
nodes.Undef = Undef;
class UnlessGuard extends Node {
    constructor(
        cond,
        keyword_l,
        expression_l,
    ) {
        super();
        this.cond = cond;
        this.keyword_l = keyword_l;
        this.expression_l = expression_l;
    }
}
nodes.UnlessGuard = UnlessGuard;
class Until extends Node {
    constructor(
        cond,
        body,
        keyword_l,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.cond = cond;
        this.body = body;
        this.keyword_l = keyword_l;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Until = Until;
class UntilPost extends Node {
    constructor(
        cond,
        body,
        keyword_l,
        expression_l,
    ) {
        super();
        this.cond = cond;
        this.body = body;
        this.keyword_l = keyword_l;
        this.expression_l = expression_l;
    }
}
nodes.UntilPost = UntilPost;
class When extends Node {
    constructor(
        patterns,
        body,
        keyword_l,
        begin_l,
        expression_l,
    ) {
        super();
        this.patterns = patterns;
        this.body = body;
        this.keyword_l = keyword_l;
        this.begin_l = begin_l;
        this.expression_l = expression_l;
    }
}
nodes.When = When;
class While extends Node {
    constructor(
        cond,
        body,
        keyword_l,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.cond = cond;
        this.body = body;
        this.keyword_l = keyword_l;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.While = While;
class WhilePost extends Node {
    constructor(
        cond,
        body,
        keyword_l,
        expression_l,
    ) {
        super();
        this.cond = cond;
        this.body = body;
        this.keyword_l = keyword_l;
        this.expression_l = expression_l;
    }
}
nodes.WhilePost = WhilePost;
class XHeredoc extends Node {
    constructor(
        parts,
        heredoc_body_l,
        heredoc_end_l,
        expression_l,
    ) {
        super();
        this.parts = parts;
        this.heredoc_body_l = heredoc_body_l;
        this.heredoc_end_l = heredoc_end_l;
        this.expression_l = expression_l;
    }
}
nodes.XHeredoc = XHeredoc;
class Xstr extends Node {
    constructor(
        parts,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.parts = parts;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Xstr = Xstr;
class Yield extends Node {
    constructor(
        args,
        keyword_l,
        begin_l,
        end_l,
        expression_l,
    ) {
        super();
        this.args = args;
        this.keyword_l = keyword_l;
        this.begin_l = begin_l;
        this.end_l = end_l;
        this.expression_l = expression_l;
    }
}
nodes.Yield = Yield;
class ZSuper extends Node {
    constructor(
        expression_l,
    ) {
        super();
        this.expression_l = expression_l;
    }
}
nodes.ZSuper = ZSuper;

})();

root.Node = Node;
root.nodes = nodes;

// This file is autogenerated by codegen/messages_js.rs

class DiagnsoticMessage {}
const messages = {};

(function() {

class FractionAfterNumeric extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.FractionAfterNumeric = FractionAfterNumeric;
class NoDigitsAfterDot extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.NoDigitsAfterDot = NoDigitsAfterDot;
class UnknownTypeOfPercentString extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.UnknownTypeOfPercentString = UnknownTypeOfPercentString;
class NumericLiteralWithoutDigits extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.NumericLiteralWithoutDigits = NumericLiteralWithoutDigits;
class UnterminatedList extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.UnterminatedList = UnterminatedList;
class UnterminatedRegexp extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.UnterminatedRegexp = UnterminatedRegexp;
class UnterminatedString extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.UnterminatedString = UnterminatedString;
class UnterminatedQuotedString extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.UnterminatedQuotedString = UnterminatedQuotedString;
class InvalidUnicodeEscape extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.InvalidUnicodeEscape = InvalidUnicodeEscape;
class TooLargeUnicodeCodepoint extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.TooLargeUnicodeCodepoint = TooLargeUnicodeCodepoint;
class InvalidUnicodeCodepoint extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.InvalidUnicodeCodepoint = InvalidUnicodeCodepoint;
class MultipleCodepointAtSingleChar extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.MultipleCodepointAtSingleChar = MultipleCodepointAtSingleChar;
class InvalidEscapeCharacter extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.InvalidEscapeCharacter = InvalidEscapeCharacter;
class InvalidHexEscape extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.InvalidHexEscape = InvalidHexEscape;
class UnterminatedHeredoc extends DiagnsoticMessage {
    constructor(
        heredoc_id,
    ) {
        super();
        this.heredoc_id = heredoc_id;
    }
}
messages.UnterminatedHeredoc = UnterminatedHeredoc;
class UnterminatedHeredocId extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.UnterminatedHeredocId = UnterminatedHeredocId;
class SlashRAtMiddleOfLine extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.SlashRAtMiddleOfLine = SlashRAtMiddleOfLine;
class DStarInterpretedAsArgPrefix extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.DStarInterpretedAsArgPrefix = DStarInterpretedAsArgPrefix;
class StarInterpretedAsArgPrefix extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.StarInterpretedAsArgPrefix = StarInterpretedAsArgPrefix;
class AmpersandInterpretedAsArgPrefix extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.AmpersandInterpretedAsArgPrefix = AmpersandInterpretedAsArgPrefix;
class TripleDotAtEol extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.TripleDotAtEol = TripleDotAtEol;
class ParenthesesIterpretedAsArglist extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.ParenthesesIterpretedAsArglist = ParenthesesIterpretedAsArglist;
class AmbiguousFirstArgument extends DiagnsoticMessage {
    constructor(
        operator,
    ) {
        super();
        this.operator = operator;
    }
}
messages.AmbiguousFirstArgument = AmbiguousFirstArgument;
class AmbiguousOperator extends DiagnsoticMessage {
    constructor(
        operator,
        interpreted_as,
    ) {
        super();
        this.operator = operator;
        this.interpreted_as = interpreted_as;
    }
}
messages.AmbiguousOperator = AmbiguousOperator;
class InvalidCharacterSyntax extends DiagnsoticMessage {
    constructor(
        suggestion,
    ) {
        super();
        this.suggestion = suggestion;
    }
}
messages.InvalidCharacterSyntax = InvalidCharacterSyntax;
class InvalidOctalDigit extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.InvalidOctalDigit = InvalidOctalDigit;
class TrailingCharInNumber extends DiagnsoticMessage {
    constructor(
        c,
    ) {
        super();
        this.c = c;
    }
}
messages.TrailingCharInNumber = TrailingCharInNumber;
class EmbeddedDocumentMeetsEof extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.EmbeddedDocumentMeetsEof = EmbeddedDocumentMeetsEof;
class InvalidChar extends DiagnsoticMessage {
    constructor(
        c,
    ) {
        super();
        this.c = c;
    }
}
messages.InvalidChar = InvalidChar;
class IncompleteCharacterSyntax extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.IncompleteCharacterSyntax = IncompleteCharacterSyntax;
class GvarWithoutId extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.GvarWithoutId = GvarWithoutId;
class InvalidGvarName extends DiagnsoticMessage {
    constructor(
        c,
    ) {
        super();
        this.c = c;
    }
}
messages.InvalidGvarName = InvalidGvarName;
class IvarWithoutId extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.IvarWithoutId = IvarWithoutId;
class InvalidIvarName extends DiagnsoticMessage {
    constructor(
        c,
    ) {
        super();
        this.c = c;
    }
}
messages.InvalidIvarName = InvalidIvarName;
class CvarWithoutId extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.CvarWithoutId = CvarWithoutId;
class InvalidCvarName extends DiagnsoticMessage {
    constructor(
        c,
    ) {
        super();
        this.c = c;
    }
}
messages.InvalidCvarName = InvalidCvarName;
class UnknownRegexOptions extends DiagnsoticMessage {
    constructor(
        options,
    ) {
        super();
        this.options = options;
    }
}
messages.UnknownRegexOptions = UnknownRegexOptions;
class UnterminatedUnicodeEscape extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.UnterminatedUnicodeEscape = UnterminatedUnicodeEscape;
class EncodingError extends DiagnsoticMessage {
    constructor(
        error,
    ) {
        super();
        this.error = error;
    }
}
messages.EncodingError = EncodingError;
class InvalidMultibyteChar extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.InvalidMultibyteChar = InvalidMultibyteChar;
class AmbiguousTernaryOperator extends DiagnsoticMessage {
    constructor(
        condition,
    ) {
        super();
        this.condition = condition;
    }
}
messages.AmbiguousTernaryOperator = AmbiguousTernaryOperator;
class AmbiguousRegexp extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.AmbiguousRegexp = AmbiguousRegexp;
class ElseWithoutRescue extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.ElseWithoutRescue = ElseWithoutRescue;
class BeginNotAtTopLevel extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.BeginNotAtTopLevel = BeginNotAtTopLevel;
class AliasNthRef extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.AliasNthRef = AliasNthRef;
class CsendInsideMasgn extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.CsendInsideMasgn = CsendInsideMasgn;
class ClassOrModuleNameMustBeConstant extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.ClassOrModuleNameMustBeConstant = ClassOrModuleNameMustBeConstant;
class EndlessSetterDefinition extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.EndlessSetterDefinition = EndlessSetterDefinition;
class UnexpectedToken extends DiagnsoticMessage {
    constructor(
        token_name,
    ) {
        super();
        this.token_name = token_name;
    }
}
messages.UnexpectedToken = UnexpectedToken;
class ClassDefinitionInMethodBody extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.ClassDefinitionInMethodBody = ClassDefinitionInMethodBody;
class ModuleDefinitionInMethodBody extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.ModuleDefinitionInMethodBody = ModuleDefinitionInMethodBody;
class InvalidReturnInClassOrModuleBody extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.InvalidReturnInClassOrModuleBody = InvalidReturnInClassOrModuleBody;
class ConstArgument extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.ConstArgument = ConstArgument;
class IvarArgument extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.IvarArgument = IvarArgument;
class GvarArgument extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.GvarArgument = GvarArgument;
class CvarArgument extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.CvarArgument = CvarArgument;
class NoSuchLocalVariable extends DiagnsoticMessage {
    constructor(
        var_name,
    ) {
        super();
        this.var_name = var_name;
    }
}
messages.NoSuchLocalVariable = NoSuchLocalVariable;
class OrdinaryParamDefined extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.OrdinaryParamDefined = OrdinaryParamDefined;
class NumparamUsed extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.NumparamUsed = NumparamUsed;
class TokAtEolWithoutExpression extends DiagnsoticMessage {
    constructor(
        token_name,
    ) {
        super();
        this.token_name = token_name;
    }
}
messages.TokAtEolWithoutExpression = TokAtEolWithoutExpression;
class EndInMethod extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.EndInMethod = EndInMethod;
class ComparisonAfterComparison extends DiagnsoticMessage {
    constructor(
        comparison,
    ) {
        super();
        this.comparison = comparison;
    }
}
messages.ComparisonAfterComparison = ComparisonAfterComparison;
class CircularArgumentReference extends DiagnsoticMessage {
    constructor(
        arg_name,
    ) {
        super();
        this.arg_name = arg_name;
    }
}
messages.CircularArgumentReference = CircularArgumentReference;
class DynamicConstantAssignment extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.DynamicConstantAssignment = DynamicConstantAssignment;
class CantAssignToSelf extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.CantAssignToSelf = CantAssignToSelf;
class CantAssignToNil extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.CantAssignToNil = CantAssignToNil;
class CantAssignToTrue extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.CantAssignToTrue = CantAssignToTrue;
class CantAssignToFalse extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.CantAssignToFalse = CantAssignToFalse;
class CantAssignToFile extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.CantAssignToFile = CantAssignToFile;
class CantAssignToLine extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.CantAssignToLine = CantAssignToLine;
class CantAssignToEncoding extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.CantAssignToEncoding = CantAssignToEncoding;
class CantAssignToNumparam extends DiagnsoticMessage {
    constructor(
        numparam,
    ) {
        super();
        this.numparam = numparam;
    }
}
messages.CantAssignToNumparam = CantAssignToNumparam;
class CantSetVariable extends DiagnsoticMessage {
    constructor(
        var_name,
    ) {
        super();
        this.var_name = var_name;
    }
}
messages.CantSetVariable = CantSetVariable;
class BlockGivenToYield extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.BlockGivenToYield = BlockGivenToYield;
class BlockAndBlockArgGiven extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.BlockAndBlockArgGiven = BlockAndBlockArgGiven;
class SymbolLiteralWithInterpolation extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.SymbolLiteralWithInterpolation = SymbolLiteralWithInterpolation;
class ReservedForNumparam extends DiagnsoticMessage {
    constructor(
        numparam,
    ) {
        super();
        this.numparam = numparam;
    }
}
messages.ReservedForNumparam = ReservedForNumparam;
class KeyMustBeValidAsLocalVariable extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.KeyMustBeValidAsLocalVariable = KeyMustBeValidAsLocalVariable;
class DuplicateVariableName extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.DuplicateVariableName = DuplicateVariableName;
class DuplicateKeyName extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.DuplicateKeyName = DuplicateKeyName;
class SingletonLiteral extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.SingletonLiteral = SingletonLiteral;
class NthRefIsTooBig extends DiagnsoticMessage {
    constructor(
        nth_ref,
    ) {
        super();
        this.nth_ref = nth_ref;
    }
}
messages.NthRefIsTooBig = NthRefIsTooBig;
class DuplicatedArgumentName extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.DuplicatedArgumentName = DuplicatedArgumentName;
class RegexError extends DiagnsoticMessage {
    constructor(
        error,
    ) {
        super();
        this.error = error;
    }
}
messages.RegexError = RegexError;
class InvalidSymbol extends DiagnsoticMessage {
    constructor(
        symbol,
    ) {
        super();
        this.symbol = symbol;
    }
}
messages.InvalidSymbol = InvalidSymbol;
class VoidValueExpression extends DiagnsoticMessage {
    constructor(
    ) {
        super();
    }
}
messages.VoidValueExpression = VoidValueExpression;

})();

root.DiagnsoticMessage = DiagnsoticMessage;
root.messages = messages;

class Loc {
    constructor(begin, end) {
        this.begin = begin;
        this.end = end;
    }
}

class Bytes {
    constructor(raw) {
        this.raw = raw;
    }
}

class Token {
    constructor(token_type, token_value, loc) {
        this.token_type = token_type;
        this.token_value = token_value;
        this.loc = loc;
    }
}

class Diagnostic {
    constructor(level, message, loc) {
        this.level = level;
        this.message = message;
        this.loc = loc;
    }
}

class Comment {
    constructor(location, kind) {
        this.location = location;
        this.kind = kind;
    }
}

class MagicComment {
    constructor(kind, key_l, value_l) {
        this.kind = kind;
        this.key_l = key_l;
        this.value_l = value_l;
    }
}

class DecodedInput {
    constructor(name, lines, bytes) {
        this.name = name;
        this.lines = lines;
        this.bytes = bytes;
    }
}

class SourceLine {
    constructor(start, end, ends_with_eof) {
        this.start = start;
        this.end = end;
        this.ends_with_eof = ends_with_eof;
    }
}

class ParserResult {
    constructor(
        ast,
        tokens,
        diagnostics,
        comments,
        magic_comments,
        input,
    ) {
        this.ast = ast;
        this.tokens = tokens;
        this.diagnostics = diagnostics;
        this.comments = comments;
        this.magic_comments = magic_comments;
        this.input = input;
    }
}

root.Loc = Loc;
root.Bytes = Bytes;
root.Token = Token;
root.Diagnostic = Diagnostic;
root.Comment = Comment;
root.MagicComment = MagicComment;
root.DecodedInput = DecodedInput;
root.SourceLine = SourceLine;
root.ParserResult = ParserResult;

function lib_ruby_parser__now() {
    return performance.now();
}


let wasm_bindgen;
(function() {
    const __exports = {};
    let wasm;

    const heap = new Array(32).fill(undefined);

    heap.push(undefined, null, true, false);

function getObject(idx) { return heap[idx]; }

let heap_next = heap.length;

function dropObject(idx) {
    if (idx < 36) return;
    heap[idx] = heap_next;
    heap_next = idx;
}

function takeObject(idx) {
    const ret = getObject(idx);
    dropObject(idx);
    return ret;
}

let cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });

cachedTextDecoder.decode();

let cachegetUint8Memory0 = null;
function getUint8Memory0() {
    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {
        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);
    }
    return cachegetUint8Memory0;
}

function getStringFromWasm0(ptr, len) {
    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));
}

function addHeapObject(obj) {
    if (heap_next === heap.length) heap.push(heap.length + 1);
    const idx = heap_next;
    heap_next = heap[idx];

    heap[idx] = obj;
    return idx;
}

let WASM_VECTOR_LEN = 0;

let cachedTextEncoder = new TextEncoder('utf-8');

const encodeString = (typeof cachedTextEncoder.encodeInto === 'function'
    ? function (arg, view) {
    return cachedTextEncoder.encodeInto(arg, view);
}
    : function (arg, view) {
    const buf = cachedTextEncoder.encode(arg);
    view.set(buf);
    return {
        read: arg.length,
        written: buf.length
    };
});

function passStringToWasm0(arg, malloc, realloc) {

    if (realloc === undefined) {
        const buf = cachedTextEncoder.encode(arg);
        const ptr = malloc(buf.length);
        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);
        WASM_VECTOR_LEN = buf.length;
        return ptr;
    }

    let len = arg.length;
    let ptr = malloc(len);

    const mem = getUint8Memory0();

    let offset = 0;

    for (; offset < len; offset++) {
        const code = arg.charCodeAt(offset);
        if (code > 0x7F) break;
        mem[ptr + offset] = code;
    }

    if (offset !== len) {
        if (offset !== 0) {
            arg = arg.slice(offset);
        }
        ptr = realloc(ptr, len, len = offset + arg.length * 3);
        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);
        const ret = encodeString(arg, view);

        offset += ret.written;
    }

    WASM_VECTOR_LEN = offset;
    return ptr;
}

function isLikeNone(x) {
    return x === undefined || x === null;
}

let cachegetInt32Memory0 = null;
function getInt32Memory0() {
    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {
        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);
    }
    return cachegetInt32Memory0;
}

let cachegetUint32Memory0 = null;
function getUint32Memory0() {
    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {
        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);
    }
    return cachegetUint32Memory0;
}

function getArrayJsValueFromWasm0(ptr, len) {
    const mem = getUint32Memory0();
    const slice = mem.subarray(ptr / 4, ptr / 4 + len);
    const result = [];
    for (let i = 0; i < slice.length; i++) {
        result.push(takeObject(slice[i]));
    }
    return result;
}

function getArrayU8FromWasm0(ptr, len) {
    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);
}
/**
* @param {string} input
* @param {string | undefined} buffer_name
* @param {Function} decoder
* @returns {any}
*/
__exports.parse = function(input, buffer_name, decoder) {
    var ptr0 = passStringToWasm0(input, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
    var len0 = WASM_VECTOR_LEN;
    var ptr1 = isLikeNone(buffer_name) ? 0 : passStringToWasm0(buffer_name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
    var len1 = WASM_VECTOR_LEN;
    var ret = wasm.parse(ptr0, len0, ptr1, len1, addHeapObject(decoder));
    return takeObject(ret);
};

function handleError(f, args) {
    try {
        return f.apply(this, args);
    } catch (e) {
        wasm.__wbindgen_exn_store(addHeapObject(e));
    }
}

async function load(module, imports) {
    if (typeof Response === 'function' && module instanceof Response) {
        if (typeof WebAssembly.instantiateStreaming === 'function') {
            try {
                return await WebAssembly.instantiateStreaming(module, imports);

            } catch (e) {
                if (module.headers.get('Content-Type') != 'application/wasm') {
                    console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", e);

                } else {
                    throw e;
                }
            }
        }

        const bytes = await module.arrayBuffer();
        return await WebAssembly.instantiate(bytes, imports);

    } else {
        const instance = await WebAssembly.instantiate(module, imports);

        if (instance instanceof WebAssembly.Instance) {
            return { instance, module };

        } else {
            return instance;
        }
    }
}

async function init(input) {
    if (typeof input === 'undefined') {
        let src;
        if (typeof document === 'undefined') {
            src = location.href;
        } else {
            src = document.currentScript.src;
        }
        input = src.replace(/\.js$/, '_bg.wasm');
    }
    const imports = {};
    imports.wbg = {};
    imports.wbg.__wbg_new_b950b0e6f9e36d24 = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.Alias(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_a45791024fea55e7 = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.And(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_9f35b82ec8b99524 = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.AndAsgn(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_2b1759974d5d72a8 = function(arg0, arg1, arg2) {
        try {
            var ret = new nodes.Arg(getStringFromWasm0(arg0, arg1), takeObject(arg2));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_1e004d6527fb3153 = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Args(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_079b3c66f892bd69 = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Array(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_e4e8ec1ff7383a36 = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.ArrayPattern(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_58d999ead42f3731 = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.ArrayPatternWithTail(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_e205011ed7067280 = function(arg0, arg1, arg2) {
        try {
            var ret = new nodes.BackRef(getStringFromWasm0(arg0, arg1), takeObject(arg2));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_46537d87dfce970e = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Begin(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_71fdc2c72b61c549 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        var ret = new nodes.Block(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_b862827eb343742f = function(arg0, arg1, arg2, arg3, arg4) {
        try {
            var ret = new nodes.Blockarg(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_6a2832c3c9683bb4 = function(arg0, arg1, arg2) {
        var ret = new nodes.BlockPass(takeObject(arg0), takeObject(arg1), takeObject(arg2));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_1f0db8c8d9761ac5 = function(arg0, arg1, arg2, arg3) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Break(v0, takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_b08b2e23d849e260 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {
        var v0 = getArrayJsValueFromWasm0(arg1, arg2).slice();
        wasm.__wbindgen_free(arg1, arg2 * 4);
        var ret = new nodes.Case(takeObject(arg0), v0, takeObject(arg3), takeObject(arg4), takeObject(arg5), takeObject(arg6), takeObject(arg7));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_717b60e218997b46 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {
        var v0 = getArrayJsValueFromWasm0(arg1, arg2).slice();
        wasm.__wbindgen_free(arg1, arg2 * 4);
        var ret = new nodes.CaseMatch(takeObject(arg0), v0, takeObject(arg3), takeObject(arg4), takeObject(arg5), takeObject(arg6), takeObject(arg7));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_5d241524b1fa4de4 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {
        try {
            var ret = new nodes.Casgn(takeObject(arg0), getStringFromWasm0(arg1, arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5), takeObject(arg6), takeObject(arg7));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg1, arg2);
        }
    };
    imports.wbg.__wbg_new_bccbd463e1c85b57 = function(arg0) {
        var ret = new nodes.Cbase(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_63104fdf3070989f = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
        var ret = new nodes.Class(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5), takeObject(arg6));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_01c7fbbefff8dcd3 = function(arg0, arg1, arg2, arg3) {
        try {
            var ret = new nodes.Complex(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_b624707fa94c0153 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        try {
            var ret = new nodes.Const(takeObject(arg0), getStringFromWasm0(arg1, arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg1, arg2);
        }
    };
    imports.wbg.__wbg_new_b935213a9aafad72 = function(arg0, arg1, arg2, arg3, arg4) {
        var ret = new nodes.ConstPattern(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_c32f74097bfc4b60 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10) {
        try {
            var v0 = getArrayJsValueFromWasm0(arg3, arg4).slice();
            wasm.__wbindgen_free(arg3, arg4 * 4);
            var ret = new nodes.CSend(takeObject(arg0), getStringFromWasm0(arg1, arg2), v0, takeObject(arg5), takeObject(arg6), takeObject(arg7), takeObject(arg8), takeObject(arg9), takeObject(arg10));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg1, arg2);
        }
    };
    imports.wbg.__wbg_new_b905a8dcc87401f6 = function(arg0, arg1, arg2) {
        try {
            var ret = new nodes.Cvar(getStringFromWasm0(arg0, arg1), takeObject(arg2));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_18c111bd7119419f = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        try {
            var ret = new nodes.Cvasgn(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_754e68f795f6f9cc = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {
        try {
            var ret = new nodes.Def(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5), takeObject(arg6), takeObject(arg7), takeObject(arg8));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_49f203d4a74b3d0d = function(arg0, arg1, arg2, arg3, arg4) {
        var ret = new nodes.Defined(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_467406ae331f8ddf = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10) {
        try {
            var ret = new nodes.Defs(takeObject(arg0), getStringFromWasm0(arg1, arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5), takeObject(arg6), takeObject(arg7), takeObject(arg8), takeObject(arg9), takeObject(arg10));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg1, arg2);
        }
    };
    imports.wbg.__wbg_new_43ec919838bee520 = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Dstr(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_2f3ae2f557fe5930 = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Dsym(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_40b26bed107c9c9a = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.EFlipFlop(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_7d45f1bfe36e9ba9 = function(arg0) {
        var ret = new nodes.EmptyElse(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_9d863ae1c79ca567 = function(arg0) {
        var ret = new nodes.Encoding(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_f0bbc35e1b2fc816 = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.Ensure(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_675b4c0ac847e913 = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.Erange(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_9b00ffe2bd8f1e6e = function(arg0) {
        var ret = new nodes.False(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_9bea19ba86fb7224 = function(arg0) {
        var ret = new nodes.File(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_dcad52714a1cbf6f = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.FindPattern(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_3ae3a97630bb682a = function(arg0, arg1, arg2, arg3) {
        try {
            var ret = new nodes.Float(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_0c5c8d81a997c97b = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {
        var ret = new nodes.For(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5), takeObject(arg6), takeObject(arg7));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_76e770f0f6e09458 = function(arg0) {
        var ret = new nodes.ForwardArg(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_a68b5a86dff82d13 = function(arg0) {
        var ret = new nodes.ForwardedArgs(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_0050cc2e975e2c5f = function(arg0, arg1, arg2) {
        try {
            var ret = new nodes.Gvar(getStringFromWasm0(arg0, arg1), takeObject(arg2));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_144d37b03d4677d3 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        try {
            var ret = new nodes.Gvasgn(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_7fd9f0e4322c5590 = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Hash(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_d131eea01ee8b70f = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.HashPattern(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_fa943361e59af5ea = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Heredoc(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_2a43d9a49b205a3e = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {
        var ret = new nodes.If(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5), takeObject(arg6), takeObject(arg7));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_67999d0c58b45227 = function(arg0, arg1, arg2) {
        var ret = new nodes.IfGuard(takeObject(arg0), takeObject(arg1), takeObject(arg2));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_0f331566477e8abb = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.IFlipFlop(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_9425ebebdf00d497 = function(arg0, arg1, arg2, arg3, arg4) {
        var ret = new nodes.IfMod(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_ed6a53e4edbd6de8 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        var ret = new nodes.IfTernary(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_633a31b85d16265b = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        var v0 = getArrayJsValueFromWasm0(arg1, arg2).slice();
        wasm.__wbindgen_free(arg1, arg2 * 4);
        var ret = new nodes.Index(takeObject(arg0), v0, takeObject(arg3), takeObject(arg4), takeObject(arg5));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_2810d2fb43c491bb = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {
        var v0 = getArrayJsValueFromWasm0(arg1, arg2).slice();
        wasm.__wbindgen_free(arg1, arg2 * 4);
        var ret = new nodes.IndexAsgn(takeObject(arg0), v0, takeObject(arg3), takeObject(arg4), takeObject(arg5), takeObject(arg6), takeObject(arg7));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_42e790925b962cca = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        var ret = new nodes.InPattern(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_5d9351f05db65082 = function(arg0, arg1, arg2, arg3) {
        try {
            var ret = new nodes.Int(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_0b7289ae23d23dfd = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.Irange(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_a72a117d7406ec66 = function(arg0, arg1, arg2) {
        try {
            var ret = new nodes.Ivar(getStringFromWasm0(arg0, arg1), takeObject(arg2));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_0f5dad8e564b0037 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        try {
            var ret = new nodes.Ivasgn(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_1b566d72dc2a5b58 = function(arg0, arg1, arg2, arg3) {
        try {
            var ret = new nodes.Kwarg(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_2f9e3de9052ffa16 = function(arg0, arg1, arg2) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Kwargs(v0, takeObject(arg2));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_4495e3935946c060 = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.KwBegin(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_f71f6dafdffa6c03 = function(arg0, arg1) {
        var ret = new nodes.Kwnilarg(takeObject(arg0), takeObject(arg1));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_e0ac7d5a19d670ca = function(arg0, arg1, arg2, arg3, arg4) {
        try {
            var ret = new nodes.Kwoptarg(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_3b354d22420df120 = function(arg0, arg1, arg2, arg3, arg4) {
        let v0;
        if (arg0 !== 0) {
            v0 = getStringFromWasm0(arg0, arg1).slice();
            wasm.__wbindgen_free(arg0, arg1 * 1);
        }
        var ret = new nodes.Kwrestarg(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_3681448cbf77ba78 = function(arg0, arg1, arg2) {
        var ret = new nodes.Kwsplat(takeObject(arg0), takeObject(arg1), takeObject(arg2));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_254e4fc5c5d18bd4 = function(arg0) {
        var ret = new nodes.Lambda(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_b20738f618943c61 = function(arg0) {
        var ret = new nodes.Line(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_64ade0cca152679f = function(arg0, arg1, arg2) {
        try {
            var ret = new nodes.Lvar(getStringFromWasm0(arg0, arg1), takeObject(arg2));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_78dd29449b3a2a78 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        try {
            var ret = new nodes.Lvasgn(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_cf8838ba3499ced8 = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.Masgn(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_310255dc7023176b = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.MatchAlt(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_2ef01fd456fbd30f = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.MatchAs(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_a850c32b315dfa3c = function(arg0, arg1) {
        var ret = new nodes.MatchCurrentLine(takeObject(arg0), takeObject(arg1));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_667a9879c23257a2 = function(arg0, arg1, arg2) {
        var ret = new nodes.MatchNilPattern(takeObject(arg0), takeObject(arg1), takeObject(arg2));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_c41d2b20ca9b65d5 = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.MatchPattern(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_cc1263e0a8f7b808 = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.MatchPatternP(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_021a3f2d1210f0ac = function(arg0, arg1, arg2) {
        var ret = new nodes.MatchRest(takeObject(arg0), takeObject(arg1), takeObject(arg2));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_8b53b628889a8949 = function(arg0, arg1, arg2, arg3) {
        try {
            var ret = new nodes.MatchVar(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_ca2d286dd30f5b0c = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.MatchWithLvasgn(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_60d14ad2bffe7750 = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Mlhs(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_7f2b8e0007e1b1a0 = function(arg0, arg1, arg2, arg3, arg4) {
        var ret = new nodes.Module(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_c987f699fd95b8c4 = function(arg0, arg1, arg2, arg3) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Next(v0, takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_a16d6911b410b88b = function(arg0) {
        var ret = new nodes.Nil(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_60ec5105157371e7 = function(arg0, arg1, arg2) {
        try {
            var ret = new nodes.NthRef(getStringFromWasm0(arg0, arg1), takeObject(arg2));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_b32ca4fd3fae82eb = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        var ret = new nodes.Numblock(takeObject(arg0), arg1, takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_9eab588e72124752 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        try {
            var ret = new nodes.OpAsgn(takeObject(arg0), getStringFromWasm0(arg1, arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg1, arg2);
        }
    };
    imports.wbg.__wbg_new_66e72d405a858792 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        try {
            var ret = new nodes.Optarg(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_7ac5fcb9ecb5ad98 = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.Or(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_e8c03e84dd69bb4d = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.OrAsgn(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_c352bbbfa448845e = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.Pair(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_dac37fcb359d3c8e = function(arg0, arg1, arg2) {
        var ret = new nodes.Pin(takeObject(arg0), takeObject(arg1), takeObject(arg2));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_8cd676a706db544f = function(arg0, arg1, arg2, arg3, arg4) {
        var ret = new nodes.Postexe(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_7ed014c035b4bd03 = function(arg0, arg1, arg2, arg3, arg4) {
        var ret = new nodes.Preexe(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_b5ba45839f536fc3 = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Procarg0(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_5b4b8cff341c8663 = function(arg0, arg1, arg2, arg3) {
        try {
            var ret = new nodes.Rational(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_2841c264597bac48 = function(arg0) {
        var ret = new nodes.Redo(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_dc3d7c1806d6bf73 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Regexp(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_d2114200689cce23 = function(arg0, arg1, arg2) {
        let v0;
        if (arg0 !== 0) {
            v0 = getStringFromWasm0(arg0, arg1).slice();
            wasm.__wbindgen_free(arg0, arg1 * 1);
        }
        var ret = new nodes.RegOpt(v0, takeObject(arg2));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_69cf6f13387b6c53 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        var v0 = getArrayJsValueFromWasm0(arg1, arg2).slice();
        wasm.__wbindgen_free(arg1, arg2 * 4);
        var ret = new nodes.Rescue(takeObject(arg0), v0, takeObject(arg3), takeObject(arg4), takeObject(arg5));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_e2159a0f164419a1 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
        var ret = new nodes.RescueBody(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5), takeObject(arg6));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_3fe85594feaa3b16 = function(arg0, arg1, arg2, arg3, arg4) {
        let v0;
        if (arg0 !== 0) {
            v0 = getStringFromWasm0(arg0, arg1).slice();
            wasm.__wbindgen_free(arg0, arg1 * 1);
        }
        var ret = new nodes.Restarg(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_c0eafbfeb721b75f = function(arg0) {
        var ret = new nodes.Retry(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_4aca86ffec38813e = function(arg0, arg1, arg2, arg3) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Return(v0, takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_e7d2aadb130a829b = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        var ret = new nodes.SClass(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_a33237a8482935a2 = function(arg0) {
        var ret = new nodes.Self_(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_983e72e3d17e0191 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10) {
        try {
            var v0 = getArrayJsValueFromWasm0(arg3, arg4).slice();
            wasm.__wbindgen_free(arg3, arg4 * 4);
            var ret = new nodes.Send(takeObject(arg0), getStringFromWasm0(arg1, arg2), v0, takeObject(arg5), takeObject(arg6), takeObject(arg7), takeObject(arg8), takeObject(arg9), takeObject(arg10));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg1, arg2);
        }
    };
    imports.wbg.__wbg_new_3fdf9921bd19891d = function(arg0, arg1, arg2) {
        try {
            var ret = new nodes.Shadowarg(getStringFromWasm0(arg0, arg1), takeObject(arg2));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_d117ec80b9ec3c23 = function(arg0, arg1, arg2) {
        var ret = new nodes.Splat(takeObject(arg0), takeObject(arg1), takeObject(arg2));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_32299265cbe0bdfb = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.Str(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_80c86d2fe4f13b06 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Super(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_f357e0351a6d07ad = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.Sym(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_9630535c3554b7fe = function(arg0) {
        var ret = new nodes.True(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_a5d195cde3cba4c8 = function(arg0, arg1, arg2, arg3) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Undef(v0, takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_368e7c2fac5e70e6 = function(arg0, arg1, arg2) {
        var ret = new nodes.UnlessGuard(takeObject(arg0), takeObject(arg1), takeObject(arg2));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_44b778ba06cccc37 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        var ret = new nodes.Until(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_c19b40eb394deb11 = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.UntilPost(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_293dfe83714177b0 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.When(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_2d8aa5f719da5612 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        var ret = new nodes.While(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_a0049f36e2d50b96 = function(arg0, arg1, arg2, arg3) {
        var ret = new nodes.WhilePost(takeObject(arg0), takeObject(arg1), takeObject(arg2), takeObject(arg3));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_9bf1bdd26f919671 = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.XHeredoc(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_9aa4d659ef9be9e2 = function(arg0, arg1, arg2, arg3, arg4) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Xstr(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_5c91b19410acbee2 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        var v0 = getArrayJsValueFromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 4);
        var ret = new nodes.Yield(v0, takeObject(arg2), takeObject(arg3), takeObject(arg4), takeObject(arg5));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_644b376113c4a1a9 = function(arg0) {
        var ret = new nodes.ZSuper(takeObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_bcc26cd18eb45d93 = function() {
        var ret = new messages.FractionAfterNumeric();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_676decd24e54d921 = function() {
        var ret = new messages.NoDigitsAfterDot();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_d925a7d53e83d03e = function() {
        var ret = new messages.UnknownTypeOfPercentString();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_24f758dc3cbf2f9e = function() {
        var ret = new messages.NumericLiteralWithoutDigits();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_2d7c2fd39134df8a = function() {
        var ret = new messages.UnterminatedList();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_84a4a9c3520c9e9a = function() {
        var ret = new messages.UnterminatedRegexp();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_1ea7a4767b055aec = function() {
        var ret = new messages.UnterminatedString();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_41f277223a8caf4b = function() {
        var ret = new messages.UnterminatedQuotedString();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_3602932d3aa9d094 = function() {
        var ret = new messages.InvalidUnicodeEscape();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_103cd5bb94d37301 = function() {
        var ret = new messages.TooLargeUnicodeCodepoint();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_cabf8c8da3743357 = function() {
        var ret = new messages.InvalidUnicodeCodepoint();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_3e40ccc41338aa84 = function() {
        var ret = new messages.MultipleCodepointAtSingleChar();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_ae40120590b9ea91 = function() {
        var ret = new messages.InvalidEscapeCharacter();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_d353442413212bf7 = function() {
        var ret = new messages.InvalidHexEscape();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_42ff12150a259162 = function(arg0, arg1) {
        try {
            var ret = new messages.UnterminatedHeredoc(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_9b0eec18d601187a = function() {
        var ret = new messages.UnterminatedHeredocId();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_af97490a1115eed6 = function() {
        var ret = new messages.SlashRAtMiddleOfLine();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_56196e9347b4f55a = function() {
        var ret = new messages.DStarInterpretedAsArgPrefix();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_22c3eb0679598c3d = function() {
        var ret = new messages.StarInterpretedAsArgPrefix();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_57705fd87f409af6 = function() {
        var ret = new messages.AmpersandInterpretedAsArgPrefix();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_6fc5950757d5e567 = function() {
        var ret = new messages.TripleDotAtEol();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_bcfbad817f36bf46 = function() {
        var ret = new messages.ParenthesesIterpretedAsArglist();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_505d727dfd308439 = function(arg0) {
        var ret = new messages.AmbiguousFirstArgument(arg0);
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_5e5d61fd7b26cf86 = function(arg0, arg1, arg2, arg3) {
        try {
            var ret = new messages.AmbiguousOperator(getStringFromWasm0(arg0, arg1), getStringFromWasm0(arg2, arg3));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
            wasm.__wbindgen_free(arg2, arg3);
        }
    };
    imports.wbg.__wbg_new_31547ea348b5ebf1 = function(arg0, arg1) {
        try {
            var ret = new messages.InvalidCharacterSyntax(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_70a7b6cb68a14648 = function() {
        var ret = new messages.InvalidOctalDigit();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_7ef73a2a80131a4e = function(arg0) {
        var ret = new messages.TrailingCharInNumber(arg0);
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_6c9744758c989efb = function() {
        var ret = new messages.EmbeddedDocumentMeetsEof();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_df62abc182e7d601 = function(arg0) {
        var ret = new messages.InvalidChar(arg0);
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_4d363565b8b7736b = function() {
        var ret = new messages.IncompleteCharacterSyntax();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_a6d4a5d798deb8cc = function() {
        var ret = new messages.GvarWithoutId();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_efe251a6c4da5620 = function(arg0) {
        var ret = new messages.InvalidGvarName(arg0);
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_921d252c14557c06 = function() {
        var ret = new messages.IvarWithoutId();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_be9c3bfba6c1cd18 = function(arg0) {
        var ret = new messages.InvalidIvarName(arg0);
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_fec6190c43a618cc = function() {
        var ret = new messages.CvarWithoutId();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_acbe68683bbc284b = function(arg0) {
        var ret = new messages.InvalidCvarName(arg0);
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_88cdbe9f8478725c = function(arg0, arg1) {
        try {
            var ret = new messages.UnknownRegexOptions(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_23cc427960c49b80 = function() {
        var ret = new messages.UnterminatedUnicodeEscape();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_1051aff7d7aaeee4 = function(arg0, arg1) {
        try {
            var ret = new messages.EncodingError(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_29f3fcb0e51c5b05 = function() {
        var ret = new messages.InvalidMultibyteChar();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_3ac78c50b41735d6 = function(arg0, arg1) {
        try {
            var ret = new messages.AmbiguousTernaryOperator(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_6ac4237a516cd417 = function() {
        var ret = new messages.AmbiguousRegexp();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_75de37e1557798f1 = function() {
        var ret = new messages.ElseWithoutRescue();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_c2c0195f564c2969 = function() {
        var ret = new messages.BeginNotAtTopLevel();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_5a725e5abf05df3f = function() {
        var ret = new messages.AliasNthRef();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_4f0bad3c5e1441c3 = function() {
        var ret = new messages.CsendInsideMasgn();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_efccb2c1dde0bd29 = function() {
        var ret = new messages.ClassOrModuleNameMustBeConstant();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_8b31c4217679a7f6 = function() {
        var ret = new messages.EndlessSetterDefinition();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_024abd0626708d30 = function(arg0, arg1) {
        try {
            var ret = new messages.UnexpectedToken(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_1cfda75102b177df = function() {
        var ret = new messages.ClassDefinitionInMethodBody();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_5d8a28489f08d6b6 = function() {
        var ret = new messages.ModuleDefinitionInMethodBody();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_61a583ceecd8d039 = function() {
        var ret = new messages.InvalidReturnInClassOrModuleBody();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_af3a2dc5be50b9b6 = function() {
        var ret = new messages.ConstArgument();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_5e5cf7112ce69dab = function() {
        var ret = new messages.IvarArgument();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_c818408753e3cf03 = function() {
        var ret = new messages.GvarArgument();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_05b2d7cec5c5a379 = function() {
        var ret = new messages.CvarArgument();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_6bd47f3abac6d218 = function(arg0, arg1) {
        try {
            var ret = new messages.NoSuchLocalVariable(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_dee162ed4fbfbae2 = function() {
        var ret = new messages.OrdinaryParamDefined();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_5376ebdea05f5601 = function() {
        var ret = new messages.NumparamUsed();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_e1a9c241bbb7b7e4 = function(arg0, arg1) {
        try {
            var ret = new messages.TokAtEolWithoutExpression(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_7277211463fda57e = function() {
        var ret = new messages.EndInMethod();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_d60b08b2f916ea75 = function(arg0, arg1) {
        try {
            var ret = new messages.ComparisonAfterComparison(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_9b6e31b809409f02 = function(arg0, arg1) {
        try {
            var ret = new messages.CircularArgumentReference(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_6fa219f65fc224d5 = function() {
        var ret = new messages.DynamicConstantAssignment();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_8bb251b67511843f = function() {
        var ret = new messages.CantAssignToSelf();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_8a5a46e1464f2431 = function() {
        var ret = new messages.CantAssignToNil();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_2e46ef8b653bbdc1 = function() {
        var ret = new messages.CantAssignToTrue();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_192b69e91a41a2b2 = function() {
        var ret = new messages.CantAssignToFalse();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_6060492e33f26a13 = function() {
        var ret = new messages.CantAssignToFile();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_67a049e25f3aae56 = function() {
        var ret = new messages.CantAssignToLine();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_38e141d2213d785f = function() {
        var ret = new messages.CantAssignToEncoding();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_b07f3615c3bd1482 = function(arg0, arg1) {
        try {
            var ret = new messages.CantAssignToNumparam(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_d291560169cc33f3 = function(arg0, arg1) {
        try {
            var ret = new messages.CantSetVariable(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_ad44c848574eb610 = function() {
        var ret = new messages.BlockGivenToYield();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_1d2de440709a4174 = function() {
        var ret = new messages.BlockAndBlockArgGiven();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_a7398d6e7e85841f = function() {
        var ret = new messages.SymbolLiteralWithInterpolation();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_d10a73aefd6b3d08 = function(arg0, arg1) {
        try {
            var ret = new messages.ReservedForNumparam(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_9a7320035392e565 = function() {
        var ret = new messages.KeyMustBeValidAsLocalVariable();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_2a83730537a4254d = function() {
        var ret = new messages.DuplicateVariableName();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_1af48c37bdee80b0 = function() {
        var ret = new messages.DuplicateKeyName();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_990369d2a6c4a5a6 = function() {
        var ret = new messages.SingletonLiteral();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_4b83ac95715a7277 = function(arg0, arg1) {
        try {
            var ret = new messages.NthRefIsTooBig(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_b26ea26d10dcbcdc = function() {
        var ret = new messages.DuplicatedArgumentName();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_001f1276156c936c = function(arg0, arg1) {
        try {
            var ret = new messages.RegexError(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_62a42a771ed887e3 = function(arg0, arg1) {
        try {
            var ret = new messages.InvalidSymbol(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_ecd81fa6e6aafceb = function() {
        var ret = new messages.VoidValueExpression();
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_fa5d013b62bd618a = function(arg0, arg1) {
        var ret = new Loc(arg0 >>> 0, arg1 >>> 0);
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_08cd6a06e19ebb61 = function(arg0, arg1, arg2) {
        var ret = new SourceLine(arg0 >>> 0, arg1 >>> 0, arg2 !== 0);
        return addHeapObject(ret);
    };
    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {
        takeObject(arg0);
    };
    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {
        var ret = getStringFromWasm0(arg0, arg1);
        return addHeapObject(ret);
    };
    imports.wbg.__wbindgen_is_string = function(arg0) {
        var ret = typeof(getObject(arg0)) === 'string';
        return ret;
    };
    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {
        const obj = getObject(arg1);
        var ret = typeof(obj) === 'string' ? obj : undefined;
        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
        var len0 = WASM_VECTOR_LEN;
        getInt32Memory0()[arg0 / 4 + 1] = len0;
        getInt32Memory0()[arg0 / 4 + 0] = ptr0;
    };
    imports.wbg.__wbg_new_e3f4a8c38c94abb0 = function(arg0, arg1) {
        var v0 = getArrayU8FromWasm0(arg0, arg1).slice();
        wasm.__wbindgen_free(arg0, arg1 * 1);
        var ret = new Bytes(v0);
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_3bb36e1617d3704f = function(arg0, arg1, arg2) {
        var ret = new Token(arg0, takeObject(arg1), takeObject(arg2));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_6dca898d971b5ca3 = function(arg0, arg1, arg2, arg3) {
        try {
            var ret = new Diagnostic(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_6371ed894752bc09 = function(arg0, arg1, arg2) {
        try {
            var ret = new Comment(takeObject(arg0), getStringFromWasm0(arg1, arg2));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg1, arg2);
        }
    };
    imports.wbg.__wbg_new_ffbde51608aec5e5 = function(arg0, arg1, arg2, arg3) {
        try {
            var ret = new MagicComment(getStringFromWasm0(arg0, arg1), takeObject(arg2), takeObject(arg3));
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_0257b5c39ca5fe35 = function(arg0, arg1, arg2, arg3, arg4, arg5) {
        try {
            var v0 = getArrayJsValueFromWasm0(arg2, arg3).slice();
            wasm.__wbindgen_free(arg2, arg3 * 4);
            var v1 = getArrayU8FromWasm0(arg4, arg5).slice();
            wasm.__wbindgen_free(arg4, arg5 * 1);
            var ret = new DecodedInput(getStringFromWasm0(arg0, arg1), v0, v1);
            return addHeapObject(ret);
        } finally {
            wasm.__wbindgen_free(arg0, arg1);
        }
    };
    imports.wbg.__wbg_new_d9a01e11264a96c3 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {
        var v0 = getArrayJsValueFromWasm0(arg1, arg2).slice();
        wasm.__wbindgen_free(arg1, arg2 * 4);
        var v1 = getArrayJsValueFromWasm0(arg3, arg4).slice();
        wasm.__wbindgen_free(arg3, arg4 * 4);
        var v2 = getArrayJsValueFromWasm0(arg5, arg6).slice();
        wasm.__wbindgen_free(arg5, arg6 * 4);
        var v3 = getArrayJsValueFromWasm0(arg7, arg8).slice();
        wasm.__wbindgen_free(arg7, arg8 * 4);
        var ret = new ParserResult(takeObject(arg0), v0, v1, v2, v3, takeObject(arg9));
        return addHeapObject(ret);
    };
    imports.wbg.__wbindgen_is_null = function(arg0) {
        var ret = getObject(arg0) === null;
        return ret;
    };
    imports.wbg.__wbg_call_8a893cac80deeb51 = function() { return handleError(function (arg0, arg1, arg2, arg3) {
        var ret = getObject(arg0).call(getObject(arg1), getObject(arg2), getObject(arg3));
        return addHeapObject(ret);
    }, arguments) };
    imports.wbg.__wbg_buffer_397eaa4d72ee94dd = function(arg0) {
        var ret = getObject(arg0).buffer;
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_newwithbyteoffsetandlength_4b9b8c4e3f5adbff = function(arg0, arg1, arg2) {
        var ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_new_a7ce447f15ff496f = function(arg0) {
        var ret = new Uint8Array(getObject(arg0));
        return addHeapObject(ret);
    };
    imports.wbg.__wbg_set_969ad0a60e51d320 = function(arg0, arg1, arg2) {
        getObject(arg0).set(getObject(arg1), arg2 >>> 0);
    };
    imports.wbg.__wbg_length_1eb8fc608a0d4cdb = function(arg0) {
        var ret = getObject(arg0).length;
        return ret;
    };
    imports.wbg.__wbg_instanceof_Uint8Array_08a1f3a179095e76 = function(arg0) {
        var ret = getObject(arg0) instanceof Uint8Array;
        return ret;
    };
    imports.wbg.__wbindgen_throw = function(arg0, arg1) {
        throw new Error(getStringFromWasm0(arg0, arg1));
    };
    imports.wbg.__wbindgen_memory = function() {
        var ret = wasm.memory;
        return addHeapObject(ret);
    };

    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {
        input = fetch(input);
    }



    const { instance, module } = await load(await input, imports);

    wasm = instance.exports;
    init.__wbindgen_wasm_module = module;

    return wasm;
}

wasm_bindgen = Object.assign(init, __exports);

})();



root.parse = wasm_bindgen.parse;
let onLoadCallbacks = [];
let loaded = false;
root.onLoad = function(cb) {
    if (loaded) {
        cb()
    } else {
        onLoadCallbacks.push(cb);
    }
}
const lib_ruby_parser_wasm_url = document.currentScript.src.replace(/.js$/, '.wasm');
wasm_bindgen(lib_ruby_parser_wasm_url).then(() => {
    loaded = true;
    onLoadCallbacks.forEach(cb => cb());
    onLoadCallbacks = [];
});



})();

